import React, { useState, useEffect } from 'react';

const App = () => {
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);
  const [step, setStep] = useState('Initialisation...');

  useEffect(() => {
    const debugLoad = async () => {
      try {
        console.log('🚀 Démarrage de l\'application...');
        setStep('Vérification des composants React...');

        // Simuler un délai
        await new Promise(resolve => setTimeout(resolve, 1000));

        console.log('✅ React fonctionne correctement');
        setStep('Test des imports...');

        // Test des imports progressivement
        try {
          console.log('📦 Test import DateAccordion...');
          const DateAccordionModule = await import('./components/DateAccordion');
          console.log('✅ DateAccordion importé avec succès');

          console.log('📦 Test import Statistics...');
          const StatisticsModule = await import('./components/Statistics');
          console.log('✅ Statistics importé avec succès');

          console.log('📦 Test import ProjectManager...');
          const ProjectManagerModule = await import('./components/ProjectManager');
          console.log('✅ ProjectManager importé avec succès');

          setStep('Test des services LowDB...');

          console.log('🗄️ Test import database service...');
          const databaseModule = await import('./services/database');
          console.log('✅ Database service importé');

          console.log('🗄️ Test import task service...');
          const taskServiceModule = await import('./services/taskService');
          console.log('✅ Task service importé');

          console.log('🗄️ Test import project service...');
          const projectServiceModule = await import('./services/projectService');
          console.log('✅ Project service importé');

        } catch (importError) {
          console.error('❌ Erreur d\'import:', importError);
          setError(`Erreur d'import: ${importError.message}`);
          return;
        }

        setStep('Application prête !');
        setLoading(false);
        console.log('🎉 Tous les tests passés avec succès !');

      } catch (err) {
        console.error('❌ Erreur générale:', err);
        setError(err.message);
        setLoading(false);
      }
    };

    debugLoad();
  }, []);

  if (error) {
    return (
      <div style={{
        padding: '40px',
        fontFamily: 'Arial, sans-serif',
        backgroundColor: '#fee2e2',
        border: '2px solid #dc2626',
        borderRadius: '8px',
        margin: '20px',
        color: '#dc2626'
      }}>
        <h1>🚨 Erreur Détectée</h1>
        <p><strong>Message :</strong> {error}</p>
        <p><strong>Action :</strong> Vérifiez la console pour plus de détails</p>
        <button
          onClick={() => window.location.reload()}
          style={{
            padding: '10px 20px',
            backgroundColor: '#dc2626',
            color: 'white',
            border: 'none',
            borderRadius: '4px',
            cursor: 'pointer',
            marginTop: '10px'
          }}
        >
          Recharger la page
        </button>
      </div>
    );
  }

  if (loading) {
    return (
      <div style={{
        padding: '40px',
        fontFamily: 'Arial, sans-serif',
        backgroundColor: '#f0f9ff',
        border: '2px solid #0ea5e9',
        borderRadius: '8px',
        margin: '20px',
        textAlign: 'center'
      }}>
        <h1>🔍 Diagnostic en Cours...</h1>
        <div style={{
          width: '40px',
          height: '40px',
          border: '4px solid #e5e7eb',
          borderTop: '4px solid #0ea5e9',
          borderRadius: '50%',
          animation: 'spin 1s linear infinite',
          margin: '20px auto'
        }}></div>
        <p><strong>Étape actuelle :</strong> {step}</p>
        <p style={{ fontSize: '14px', color: '#6b7280', marginTop: '20px' }}>
          Vérifiez la console du navigateur (F12) pour voir les détails...
        </p>
        <style dangerouslySetInnerHTML={{
          __html: `
            @keyframes spin {
              0% { transform: rotate(0deg); }
              100% { transform: rotate(360deg); }
            }
          `
        }} />
      </div>
    );
  }

  return (
    <div style={{
      padding: '40px',
      fontFamily: 'Arial, sans-serif',
      backgroundColor: '#f0fdf4',
      border: '2px solid #16a34a',
      borderRadius: '8px',
      margin: '20px'
    }}>
      <h1>🎉 Diagnostic Terminé avec Succès !</h1>
      <p style={{ color: '#16a34a', fontWeight: 'bold' }}>
        ✅ Tous les composants et services sont correctement importés
      </p>

      <div style={{
        backgroundColor: 'white',
        padding: '20px',
        borderRadius: '6px',
        marginTop: '20px',
        border: '1px solid #d1d5db'
      }}>
        <h2>📋 Résultats du Test</h2>
        <ul style={{ lineHeight: '1.8' }}>
          <li>✅ React et hooks fonctionnels</li>
          <li>✅ Composants Task, TaskForm, DateAccordion importés</li>
          <li>✅ Composants Statistics, ProjectManager importés</li>
          <li>✅ Services LowDB (database, taskService, projectService) importés</li>
        </ul>
      </div>

      <div style={{ marginTop: '20px' }}>
        <p><strong>Prochaine étape :</strong></p>
        <p>Vous pouvez maintenant remplacer ce fichier par la version complète de l'application !</p>
      </div>

      <button
        onClick={() => {
          console.log('🔄 Redémarrage pour passer à la version complète...');
          alert('Diagnostic terminé ! Vérifiez la console et remplacez par la version complète.');
        }}
        style={{
          padding: '12px 24px',
          backgroundColor: '#16a34a',
          color: 'white',
          border: 'none',
          borderRadius: '6px',
          cursor: 'pointer',
          marginTop: '20px',
          fontSize: '16px'
        }}
      >
        Diagnostic Terminé ✅
      </button>
    </div>
  );
};

export default App;